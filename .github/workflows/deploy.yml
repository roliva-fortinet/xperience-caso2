name: Deploy EC2 with Apache + Lacework IaC Scan

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  security-events: write
  pull-requests: write

jobs:
  Initialize:
    name: Initialize Tools
    runs-on: ubuntu-latest
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Test Tools
        run: |
          aws --version
          terraform --version

  Lacework-Scanner:
    name: üîç Lacework IaC Scan
    needs: Initialize
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Create environment variables file
        run: |
          env | grep "GITHUB_\\|LW_\\|CI_" > env.list
          echo "LW_ACCOUNT=${{ secrets.LW_ACCOUNT }}" >> env.list
          echo "LW_API_KEY=${{ secrets.LW_API_KEY }}" >> env.list
          echo "LW_API_SECRET=${{ secrets.LW_API_SECRET }}" >> env.list
          echo "EXIT_FLAG=CRITICAL=1" >> env.list

      - name: Run Lacework IaC Scan
        run: |
          mkdir -p lacework-reports
          docker run --rm \
            -e LW_ACCOUNT=${{ secrets.LW_ACCOUNT }} \
            -e LW_API_KEY=${{ secrets.LW_API_KEY }} \
            -e LW_API_SECRET=${{ secrets.LW_API_SECRET }} \
            -v "$PWD:/workdir" \
            -w /workdir \
            lacework/codesec-iac \
            lacework iac scan \
              --directory /workdir \
              --output json \
              --output-path /workdir/lacework-reports/scan.json
          
      - name: Upload Scan Reports
        uses: actions/upload-artifact@v4
        with:
          name: Lacework IaC Reports
          path: |
            /tmp/iac_reports/*
      
      - name: Publish IaC Scan Summary
        run: |
          RESULTS_JSON=$(find /tmp/iac_reports -name "*.json" | head -1)
          TESTS=$(jq -r '.[].findings | .[].pass' "$RESULTS_JSON" | wc -l)
          PASSED=$(jq -r '.[].findings | .[].pass' "$RESULTS_JSON" | grep true | wc -l)
          FAILED=$(jq -r '.[].findings | .[].pass' "$RESULTS_JSON" | grep false | wc -l)
          echo "<table><tr><th>Tests</th><th>Passed ‚úÖ</th><th>Fallida ‚ùå</th></tr><tr><td>Lacework IaC Scan</td><td>${TESTS}</td><td>${PASSED}</td><td>${FAILED}</td></tr></table>" >> $GITHUB_STEP_SUMMARY

  Terraform-Deploy:
    name: Terraform Deploy
    needs: Lacework-Scanner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Terraform Init & Plan
        run: |
          terraform init
          terraform plan -out=plan.tfplan
          
      - name: Terraform Apply
        run: terraform apply --auto-approve plan.tfplan
