name: Deploy EC2 with Apache + Lacework IaC Scan

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  security-events: write
  pull-requests: write

jobs:
  Initialize:
    name: Initialize Tools
    runs-on: ubuntu-latest
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Test Tools
        run: |
          aws --version
          terraform --version

  Lacework-Scanner:
    name: üîç Lacework IaC Scan
    needs: Initialize
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Lacework CLI
        run: |
          curl https://raw.githubusercontent.com/lacework/go-sdk/main/cli/install.sh | bash
          echo "$HOME/.lacework/bin" >> $GITHUB_PATH

      - name: Configure Lacework CLI environment variables
        run: |
          lacework configure set account ${{ secrets.LW_ACCOUNT }}
          lacework configure set access_key ${{ secrets.LW_API_KEY }}
          lacework configure set secret_key ${{ secrets.LW_API_SECRET }}

      - name: Run Lacework IaC Scan
        run: |
          lacework iac scan \
            --directory . \
            --output json \
            --output-path scan.json

      - name: Fail if Critical Findings Found
        run: |
          CRITICALS=$(jq '[.[].findings[] | select(.severity == "Critical")] | length' scan.json)
          echo "üîé Critical findings: $CRITICALS"
          if [ "$CRITICALS" -gt 0 ]; then
            echo "üö® Found critical IaC issues. Failing the job."
            exit 1
          fi

      - name: Upload Scan Report
        uses: actions/upload-artifact@v4
        with:
          name: Lacework IaC Report
          path: scan.json

      - name: Publish IaC Scan Summary
        run: |
          TESTS=$(jq -r '.[].findings | length' scan.json)
          PASSED=$(jq -r '.[].findings | map(select(.pass == true)) | length' scan.json)
          FAILED=$(jq -r '.[].findings | map(select(.pass == false)) | length' scan.json)
          echo "<table><tr><th>Total</th><th>Passed ‚úÖ</th><th>Failed ‚ùå</th></tr><tr><td>${TESTS}</td><td>${PASSED}</td><td>${FAILED}</td></tr></table>" >> $GITHUB_STEP_SUMMARY

  Terraform-Deploy:
    name: Terraform Deploy
    needs: Lacework-Scanner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Terraform Init & Plan
        run: |
          terraform init
          terraform plan -out=plan.tfplan

      - name: Terraform Apply
        run: terraform apply --auto-approve plan.tfplan
